name: Docker Image CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      SSH_USER: ${{ secrets.SSH_USER }}
      SSH_HOST: ${{ secrets.SSH_HOST }}
      REMOTE_DIR: '~/igy-prod/'
      DOCKER_USER: ${{ secrets.DOCKER_USER }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      DOCKER_REPO: ${{ secrets.DOCKER_REPO }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Docker login
        run: docker login -u $DOCKER_USER -p $DOCKER_PASSWORD

      - name: Build and push Docker image
        run: |
          docker buildx build . --file Dockerfile --tag $DOCKER_REPO:latest
          docker tag $DOCKER_REPO:latest $DOCKER_USER/$DOCKER_REPO:latest
          docker push $DOCKER_USER/$DOCKER_REPO:latest

      - name: Install dependencies
        run: npm install

      # - name: Check migrations status
      #   run: npm run migrate:show
      #   id: check_migrations

      # - name: Generate migration if needed
      #   run: |
      #     if [ "$(echo "${{ steps.check_migrations.outputs.stdout }}" | wc -l)" -eq 0 ]; then
      #       npm run migrate:generate
      #     fi

      # - name: Run migrations
      #   run: npm run migrate:run

      - name: Deploy to production
        run: |
          ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null "$SSH_USER@$SSH_HOST" << EOF
            cd "$REMOTE_DIR"
            docker-compose down
            docker pull $DOCKER_USER/$DOCKER_REPO:latest
            docker-compose up -d
            echo "Deployment completed successfully."
          EOF
